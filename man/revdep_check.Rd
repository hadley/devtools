% Generated by roxygen2 (4.0.2): do not edit by hand
\name{revdep_check}
\alias{revdep_check}
\title{Run R CMD check on all downstream dependencies.}
\usage{
revdep_check(pkg, recursive = FALSE, ignore = NULL,
  libpath = file.path(tempdir(), "R-lib"), srcpath = libpath,
  bioconductor = FALSE, type = getOption("pkgType"),
  threads = getOption("Ncpus", 1), check_dir = tempfile("check_cran"))
}
\arguments{
\item{pkg}{Package name. This is unlike most devtools packages which
take a path because you might want to determine dependencies for a package
that you don't have installed.}

\item{recursive}{logical: should reverse dependencies of reverse
    dependencies (and so on) be included?}

\item{ignore}{A character vector of package names to ignore. These packages
will not appear in returned vector. This is used in
\code{\link{revdep_check}} to avoid packages with installation problems
or extremely long check times.}

\item{libpath}{Path to library to store dependencies packages - if you
you're doing this a lot it's a good idea to pick a directory and stick
with it so you don't have to download all the packages every time.}

\item{srcpath}{Path to directory to store source versions of dependent
packages - again, this saves a lot of time because you don't need to
redownload the packages every time you run the package.}

\item{bioconductor}{Include bioconductor packages in checking?}

\item{type}{binary Package type to test (source, mac.binary etc). Defaults
to the same type as \code{\link{install.packages}()}.}

\item{threads}{Number of concurrent threads to use for checking.
It defaults to the option \code{"Ncpus"} or \code{1} if unset.}

\item{check_dir}{Directory to store results.}
}
\value{
An invisible list of results. But you'll probably want to look
  at the check results on disk, which are saved in \code{check_dir}.
  Summaries of all ERRORs and WARNINGs will be stored in
  \code{check_dir/00check-summary.txt}.
}
\description{
This is neeeded when you submit a new version of a package to CRAN.
}
\details{
By \code{revdep_check} uses temporary library to store any packages that
are required by the packages being tests. This ensures that they don't
interfere with your default library, but means that if you restart R
between checks, you'll need to reinstall all the packages. If you're
doing reverse dependency checks frequently, I recommend that you create
a directory for these packages and set \code{libpath}.
}
\examples{
\dontrun{
# Run R CMD check on all downstream dependencies of ggplot2
revdep_check("ggplot2")
}
}
\seealso{
\code{\link{revdep_maintainers}()} to run R CMD check on all reverse
  dependencies.
}

